name: CI

on:
  push:
    paths:
      - 'release_build.txt'

jobs:
  binding:
    name: Build Binding

    env:
      NODE_PRE_GYP_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    strategy:
      matrix:
        node-version: [ 14.x ]
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-msvc
          - x86_64-apple-darwin
          - aarch64-apple-darwin
        include:
          - target: x86_64-unknown-linux-gnu
            architecture: x64
          - target: x86_64-pc-windows-msvc
            architecture: x64
          - target: x86_64-apple-darwin
            architecture: x64
          - target: aarch64-apple-darwin
            architecture: arm

    runs-on: ubuntu-latest

    timeout-minutes: 30

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - name: Cache cargo registry
      uses: actions/cache@v2
      with:
        path: ~/.cargo/registry
        key: cargo-registry-${{ runner.os }}

    - name: Cache cargo bin
      uses: actions/cache@v2
      with:
        path: ~/.cargo/bin
        key: cargo-bin-${{ runner.os }}

    - name: Cache cargo build
      uses: actions/cache@v2
      with:
        path: target
        key: cargo-build-target-${{ runner.os }}

    - name: Install latest Rust stable
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}
        override: true

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: yarn --ignore-scripts

    - name: Build
      run: yarn build --target=${{ matrix.target }}

    - name: Test
      if: ${{ matrix.target == 'x86_64-unknown-linux-gnu' }}
      run: yarn test

    - name: Publish
      run: |
        yarn package --target_arch=${{ matrix.architecture }}
        yarn upload-binary
