name: Build
on:
  workflow_dispatch:
  push:
    tags:
    - '*'

env:
  NODE_PRE_GYP_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  MACOSX_DEPLOYMENT_TARGET: 10.11

jobs:
  build:
    name: Build ${{ matrix.target }}
    strategy:
      fail-fast: false
      matrix:
        node-version:
        - 18.x

        os:
        - ubuntu-latest
        - windows-latest
        - macos-latest

        architecture:
        - x64
        - arm64

        # Don't build arm64 bins for windows and ubuntu
        exclude:
        - os: ubuntu-latest
          architecture: arm64
        - os: windows-latest
          architecture: arm64

        include:
        - os: ubuntu-latest
          target: x86_64-unknown-linux-gnu

        - os: windows-latest
          target: x86_64-pc-windows-msvc

        - os: macos-latest
          architecture: x64
          target: x86_64-apple-darwin

        - os: macos-latest
          architecture: arm64
          target: aarch64-apple-darwin

    runs-on: ${{ matrix.os }}

    timeout-minutes: 30

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1

    - name: Configure git for private repos
      run: |
        git config --global url."https://${{ secrets.GH_TOKEN }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"

    - name: Cache cargo
      uses: actions/cache@v4
      with:
        key: cargo-${{ runner.os }}-${{ matrix.target }}-${{ hashFiles('Cargo.lock') }}
        path: |
          ~/.cargo/registry
          ~/.cargo/bin
          target

    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}
        override: true

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: yarn

    - name: Install dependencies
      run: yarn --ignore-scripts

    - name: Build
      run: yarn build --config net.git-fetch-with-cli=true --target=${{ matrix.target }}

    # Until GH action adds M1 runners, can't run aarch64 libs
    - name: Test
      if: ${{ matrix.architecture == 'x64' }}
      run: yarn test

    - name: Publish
      if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v') }}
      run: |
        yarn package --target_arch=${{ matrix.architecture }}
        yarn upload-binary
